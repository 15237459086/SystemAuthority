<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kurumi.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.kurumi.pojo.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_nick_name" property="userNickName" jdbcType="VARCHAR" />
    <result column="user_desc" property="userDesc" jdbcType="VARCHAR" />
    <result column="id_number" property="idNumber" jdbcType="VARCHAR" />
    <result column="tele_phone" property="telePhone" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_code, user_name, user_nick_name, user_desc, id_number, tele_phone, status, 
    version
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.kurumi.pojo.User" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into user (id, user_code, user_name, password,
      user_nick_name, user_desc, id_number, 
      tele_phone
      )
    values (#{id,jdbcType=INTEGER}, #{userCode,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},  #{password,jdbcType=VARCHAR},
      #{userNickName,jdbcType=VARCHAR}, #{userDesc,jdbcType=VARCHAR}, #{idNumber,jdbcType=VARCHAR}, 
      #{telePhone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kurumi.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userCode != null" >
        user_code,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="userNickName != null" >
        user_nick_name,
      </if>
      <if test="userDesc != null" >
        user_desc,
      </if>
      <if test="idNumber != null" >
        id_number,
      </if>
      <if test="telePhone != null" >
        tele_phone,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userCode != null" >
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userNickName != null" >
        #{userNickName,jdbcType=VARCHAR},
      </if>
      <if test="userDesc != null" >
        #{userDesc,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null" >
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="telePhone != null" >
        #{telePhone,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  
  
  <update id="updateByPrimaryKeySelective" parameterType="com.kurumi.pojo.User" >
    update user
    <set >
      <if test="userCode != null" >
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userNickName != null" >
        user_nick_name = #{userNickName,jdbcType=VARCHAR},
      </if>
      <if test="userDesc != null" >
        user_desc = #{userDesc,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null" >
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="telePhone != null" >
        tele_phone = #{telePhone,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kurumi.pojo.User" >
    update user
    set user_code = #{userCode,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_nick_name = #{userNickName,jdbcType=VARCHAR},
      user_desc = #{userDesc,jdbcType=VARCHAR},
      id_number = #{idNumber,jdbcType=VARCHAR},
      tele_phone = #{telePhone,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      version = #{version,jdbcType=INTEGER} + 1
    where id = #{id,jdbcType=INTEGER} and version = #{version,jdbcType=INTEGER}
  </update>
  
  <select id="getSupperAdminByLoginNameAndPassword" resultType="map" >
    select 
    	id, user_code, user_name, user_nick_name, user_desc, id_number, tele_phone, status, version
    from user
    where user_code = #{loginName} and password = #{password} and supper='1'
  </select>
  
  <select id="getUserByLoginNameAndPassword" resultType="map" >
    select 
    	id, user_code, user_name, user_nick_name, user_desc, id_number, tele_phone, status, version
    from user
    where user_code = #{loginName} and password = #{password} and supper='0' and status = '1'
  </select>
  
  <select id="getUserByUserCode" resultType="map" >
    select 
    	id, user_code, user_name, user_nick_name, user_desc, id_number, tele_phone, status, version
    from user
    where user_code = #{userCode} and supper='0' and status = '1'
  </select>
  
  <select id="getUserByCodeOrName" resultType="int" >
    select 
    	count(id)
    from user
    where user_code = #{userCode} or user_name = #{userName}
  </select>
  
  <select id="getUserByCodeOrNameAndId" resultType="int" >
    select 
    	count(id)
    from user
    where (user_code = #{userCode} or user_name = #{userName}) and id != #{id,jdbcType=INTEGER}
  </select>
  
  
   <select id="getUserByQueryUser" resultType="map" parameterType="com.kurumi.query.UserQuery" >
    select 
    	id, user_code, user_name, user_nick_name, user_desc, id_number, tele_phone, status, version
    from user
    where supper='0'
    <if test="userCode != null" >
       and user_code = #{userCode}
     </if>
     <if test="userName != null" >
       and user_name = #{userName}
     </if>
    <if test="idNumber != null" >
        and id_number = #{idNumber}
     </if>
     <if test="telePhone != null" >
        and tele_phone = #{telePhone}
      </if>
       <if test="currentStartNum != null and pageSize != null" >
        limit #{currentStartNum},#{pageSize}
      </if>
  </select>
  
  
  <select id="getUserCountByQueryUser" resultType="int" parameterType="com.kurumi.query.UserQuery" >
    select 
    	count(id)
    from user
    where supper='0'
    <if test="userCode != null" >
       and user_code = #{userCode}
     </if>
     <if test="userName != null" >
       and user_name = #{userName}
     </if>
    <if test="idNumber != null" >
        and id_number = #{idNumber}
     </if>
     <if test="telePhone != null" >
        and tele_phone = #{telePhone}
      </if>
  </select>
  
  
  <select id="getSelectedRoleByUserCode" resultType="map">
    select 
    	role.role_code, role.role_name
    from user_roles
    inner join role
    on role.role_code = user_roles.role_code
    where user_roles.user_code= #{userCode}
    
  </select>
  
  <select id="getUnSelectedRoleByUserCode" resultType="map">
     select 
    	role.role_code,role.role_name
    from role
	where role.role_code not in (select role_code from user_roles where user_code = #{userCode})
    
  </select>
  
   <select id="getSelectedAuthorityByUserCode" resultType="map">
    select distinct authority.id, authority.authority_code,authority.authority_name 
	from authority
	inner join role_authoritys
	on role_authoritys.authority_code = authority.authority_code
	inner join role
	on role.role_code = role_authoritys.role_code
	inner join user_roles
	on user_roles.role_code = role.role_code
	where user_roles.user_code = #{userCode}
    
  </select>
  
  <delete id="deleteUserRoleByUserCode">
    delete from user_roles
    where user_code = #{userCode}
  </delete>
  
  <insert id="insertUserRole">
    insert into user_roles (user_code,role_code)
    values (#{userCode,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR})
  </insert>
  
  <update id="updatePassword">
    update user
    set password = #{newPassword,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER} and password = #{oldPassword,jdbcType=INTEGER}
  </update>
  
  
  <update id="initPassword">
    update user
    set password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
</mapper>